#!/usr/bin/env python

PACKAGE = "trajectory_rover"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#       	Name		Type      	Level	Description				Default 	Min	Max

gen.add(	"traj_on",	bool_t,		0,	"Trajectory on flag", 		False)
gen.add(	"est_on",	bool_t,		0,	"Estimation on flag", 		False)

trajectory_enum = gen.enum([ 	gen.const("origin", int_t, 0, "Hover Trajectory (at origin)"),
				gen.const("setpoint",int_t, 1, "Setpoint Hover"),
		                gen.const("setpoint_traj", int_t, 2, "Setpoint Trajectory"),
                       		gen.const("circle",       int_t, 3, "Circle Trajectory"),
                       		gen.const("figure_8",     int_t, 4, "Figure 8 Trajectory"),
				gen.const("square",	  int_t, 5, "Square Trajectory"),],
                     		"An enum to set flight trajectory")
gen.add(	"traj_num", 		int_t, 		0, 	"Trajectory type", 		0, 		0, 	5, edit_method=trajectory_enum)

gen.add( 	"x_des",		double_t, 	0, 	"Desired X position [m]",  		0, 	-2.0, 	2.0)
gen.add( 	"y_des",		double_t, 	0, 	"Desired Y position [m]",  		0, 	-2.0, 	2.0)
gen.add( 	"heading_des",		int_t, 		0, 	"Heading angle [deg]",  		0, 	-180, 	180)
gen.add( 	"des_radius",		double_t, 	0, 	"Radius of Circle [m]",  	   5.0, 		0.1, 	10.0)
gen.add( 	"des_velocity",		double_t, 	0, 	"Absolute Velocity of Circle [m/s]",  0.5, 		0.01, 	2.0)

exit(gen.generate(PACKAGE, "trajectory_rover", "set_trajectory_rover"))
